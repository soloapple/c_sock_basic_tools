!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert (Pathed by Dmitry Frank, dimon.frank@gmail.com)	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8.1	//
ALIGN_8	test_tpacket.c	51;"	d	file:
BLOCKNO	packet_mmap.c	28;"	d	file:
NETDEV_NAME	packet_mmap.c	29;"	d	file:
NUM_PACKETS	test_tpacket.c	50;"	d	file:
__align_tpacket	test_tpacket.c	47;"	d	file:
__aligned_tpacket	test_tpacket.c	/^		struct tpacket2_hdr tp_h __aligned_tpacket;$/;"	m	struct:frame_map::__anon_test_tpacket_c_77	typeref:struct:frame_map::__anon_test_tpacket_c_77::tp_h	file:	access:public
__aligned_tpacket	test_tpacket.c	/^		struct tpacket_hdr tp_h __aligned_tpacket;$/;"	m	struct:frame_map::__anon_test_tpacket_c_73	typeref:struct:frame_map::__anon_test_tpacket_c_73::tp_h	file:	access:public
__aligned_tpacket	test_tpacket.c	43;"	d	file:
__v1_rx_kernel_ready	test_tpacket.c	/^static inline int __v1_rx_kernel_ready(struct tpacket_hdr *hdr)$/;"	f	file:	signature:(struct tpacket_hdr *hdr)
__v1_rx_user_ready	test_tpacket.c	/^static inline void __v1_rx_user_ready(struct tpacket_hdr *hdr)$/;"	f	file:	signature:(struct tpacket_hdr *hdr)
__v1_tx_kernel_ready	test_tpacket.c	/^static inline int __v1_tx_kernel_ready(struct tpacket_hdr *hdr)$/;"	f	file:	signature:(struct tpacket_hdr *hdr)
__v1_tx_user_ready	test_tpacket.c	/^static inline void __v1_tx_user_ready(struct tpacket_hdr *hdr)$/;"	f	file:	signature:(struct tpacket_hdr *hdr)
__v1_v2_fill	test_tpacket.c	/^static void __v1_v2_fill(struct ring *ring, unsigned int blocks)$/;"	f	file:	signature:(struct ring *ring, unsigned int blocks)
__v1_v2_rx_kernel_ready	test_tpacket.c	/^static inline int __v1_v2_rx_kernel_ready(void *base, int version)$/;"	f	file:	signature:(void *base, int version)
__v1_v2_rx_user_ready	test_tpacket.c	/^static inline void __v1_v2_rx_user_ready(void *base, int version)$/;"	f	file:	signature:(void *base, int version)
__v1_v2_set_packet_loss_discard	test_tpacket.c	/^static void __v1_v2_set_packet_loss_discard(int sock)$/;"	f	file:	signature:(int sock)
__v1_v2_tx_kernel_ready	test_tpacket.c	/^static inline int __v1_v2_tx_kernel_ready(void *base, int version)$/;"	f	file:	signature:(void *base, int version)
__v1_v2_tx_user_ready	test_tpacket.c	/^static inline void __v1_v2_tx_user_ready(void *base, int version)$/;"	f	file:	signature:(void *base, int version)
__v2_rx_kernel_ready	test_tpacket.c	/^static inline int __v2_rx_kernel_ready(struct tpacket2_hdr *hdr)$/;"	f	file:	signature:(struct tpacket2_hdr *hdr)
__v2_rx_user_ready	test_tpacket.c	/^static inline void __v2_rx_user_ready(struct tpacket2_hdr *hdr)$/;"	f	file:	signature:(struct tpacket2_hdr *hdr)
__v2_tx_kernel_ready	test_tpacket.c	/^static inline int __v2_tx_kernel_ready(struct tpacket2_hdr *hdr)$/;"	f	file:	signature:(struct tpacket2_hdr *hdr)
__v2_tx_user_ready	test_tpacket.c	/^static inline void __v2_tx_user_ready(struct tpacket2_hdr *hdr)$/;"	f	file:	signature:(struct tpacket2_hdr *hdr)
__v3_fill	test_tpacket.c	/^static void __v3_fill(struct ring *ring, unsigned int blocks)$/;"	f	file:	signature:(struct ring *ring, unsigned int blocks)
__v3_flush_block	test_tpacket.c	/^void __v3_flush_block(struct block_desc *pbd)$/;"	f	signature:(struct block_desc *pbd)
__v3_prev_block_seq_num	test_tpacket.c	/^static uint64_t __v3_prev_block_seq_num = 0;$/;"	v	file:
__v3_test_block_header	test_tpacket.c	/^static void __v3_test_block_header(struct block_desc *pbd, const int block_num)$/;"	f	file:	signature:(struct block_desc *pbd, const int block_num)
__v3_test_block_len	test_tpacket.c	/^static void __v3_test_block_len(struct block_desc *pbd, uint32_t bytes, int block_num)$/;"	f	file:	signature:(struct block_desc *pbd, uint32_t bytes, int block_num)
__v3_test_block_seq_num	test_tpacket.c	/^void __v3_test_block_seq_num(struct block_desc *pbd)$/;"	f	signature:(struct block_desc *pbd)
__v3_walk_block	test_tpacket.c	/^static void __v3_walk_block(struct block_desc *pbd, const int block_num)$/;"	f	file:	signature:(struct block_desc *pbd, const int block_num)
bind_ring	test_tpacket.c	/^static void bind_ring(int sock, struct ring *ring)$/;"	f	file:	signature:(int sock, struct ring *ring)
block_desc	test_tpacket.c	/^struct block_desc {$/;"	s	file:
block_desc::h1	test_tpacket.c	/^	struct tpacket_hdr_v1 h1;$/;"	m	struct:block_desc	typeref:struct:block_desc::tpacket_hdr_v1	file:	access:public
block_desc::offset_to_priv	test_tpacket.c	/^	uint32_t offset_to_priv;$/;"	m	struct:block_desc	file:	access:public
block_desc::version	test_tpacket.c	/^	uint32_t version;$/;"	m	struct:block_desc	file:	access:public
bug_on	test_tpacket.c	39;"	d	file:
create_payload	test_tpacket.c	/^static void create_payload(void *pay, size_t *len)$/;"	f	file:	signature:(void *pay, size_t *len)
flen	test_tpacket.c	/^	int type, rd_num, flen, version;$/;"	m	struct:ring	file:	access:public
frame_map	test_tpacket.c	/^union frame_map {$/;"	u	file:
frame_map::__anon_test_tpacket_c_73::__aligned_tpacket	test_tpacket.c	/^		struct tpacket_hdr tp_h __aligned_tpacket;$/;"	m	struct:frame_map::__anon_test_tpacket_c_73	typeref:struct:frame_map::__anon_test_tpacket_c_73::tp_h	file:	access:public
frame_map::__anon_test_tpacket_c_73::sizeof	test_tpacket.c	/^		struct sockaddr_ll s_ll __align_tpacket(sizeof(struct tpacket_hdr));$/;"	p	struct:frame_map::__anon_test_tpacket_c_73	file:	access:public	signature:(struct tpacket_hdr)
frame_map::__anon_test_tpacket_c_77::__aligned_tpacket	test_tpacket.c	/^		struct tpacket2_hdr tp_h __aligned_tpacket;$/;"	m	struct:frame_map::__anon_test_tpacket_c_77	typeref:struct:frame_map::__anon_test_tpacket_c_77::tp_h	file:	access:public
frame_map::__anon_test_tpacket_c_77::sizeof	test_tpacket.c	/^		struct sockaddr_ll s_ll __align_tpacket(sizeof(struct tpacket2_hdr));$/;"	p	struct:frame_map::__anon_test_tpacket_c_77	file:	access:public	signature:(struct tpacket2_hdr)
frame_map::raw	test_tpacket.c	/^	void *raw;$/;"	m	union:frame_map	file:	access:public
frame_map::v1	test_tpacket.c	/^	} *v1;$/;"	m	union:frame_map	typeref:struct:frame_map::__anon_test_tpacket_c_73	file:	access:public
frame_map::v2	test_tpacket.c	/^	} *v2;$/;"	m	union:frame_map	typeref:struct:frame_map::__anon_test_tpacket_c_77	file:	access:public
h1	test_tpacket.c	/^	struct tpacket_hdr_v1 h1;$/;"	m	struct:block_desc	typeref:struct:block_desc::tpacket_hdr_v1	file:	access:public
ll	test_tpacket.c	/^	struct sockaddr_ll ll;$/;"	m	struct:ring	typeref:struct:ring::sockaddr_ll	file:	access:public
main	packet_mmap.c	/^int main (int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	test_tpacket.c	/^int main(void)$/;"	f	signature:(void)
mm_len	test_tpacket.c	/^	size_t mm_len, rd_len;$/;"	m	struct:ring	file:	access:public
mm_space	test_tpacket.c	/^	uint8_t *mm_space;$/;"	m	struct:ring	file:	access:public
mmap_ring	test_tpacket.c	/^static void mmap_ring(int sock, struct ring *ring)$/;"	f	file:	signature:(int sock, struct ring *ring)
offset_to_priv	test_tpacket.c	/^	uint32_t offset_to_priv;$/;"	m	struct:block_desc	file:	access:public
pfsocket	test_tpacket.c	/^static int pfsocket(int ver)$/;"	f	file:	signature:(int ver)
raw	test_tpacket.c	/^	void *raw;$/;"	m	union:frame_map	file:	access:public
rd	test_tpacket.c	/^	struct iovec *rd;$/;"	m	struct:ring	typeref:struct:ring::iovec	file:	access:public
rd_len	test_tpacket.c	/^	size_t mm_len, rd_len;$/;"	m	struct:ring	file:	access:public
rd_num	test_tpacket.c	/^	int type, rd_num, flen, version;$/;"	m	struct:ring	file:	access:public
req	test_tpacket.c	/^		struct tpacket_req  req;$/;"	m	union:ring::__anon_test_tpacket_c_60	typeref:struct:ring::__anon_test_tpacket_c_60::tpacket_req	file:	access:public
req3	test_tpacket.c	/^		struct tpacket_req3 req3;$/;"	m	union:ring::__anon_test_tpacket_c_60	typeref:struct:ring::__anon_test_tpacket_c_60::tpacket_req3	file:	access:public
ring	test_tpacket.c	/^struct ring {$/;"	s	file:
ring::__anon_test_tpacket_c_60::req	test_tpacket.c	/^		struct tpacket_req  req;$/;"	m	union:ring::__anon_test_tpacket_c_60	typeref:struct:ring::__anon_test_tpacket_c_60::tpacket_req	file:	access:public
ring::__anon_test_tpacket_c_60::req3	test_tpacket.c	/^		struct tpacket_req3 req3;$/;"	m	union:ring::__anon_test_tpacket_c_60	typeref:struct:ring::__anon_test_tpacket_c_60::tpacket_req3	file:	access:public
ring::flen	test_tpacket.c	/^	int type, rd_num, flen, version;$/;"	m	struct:ring	file:	access:public
ring::ll	test_tpacket.c	/^	struct sockaddr_ll ll;$/;"	m	struct:ring	typeref:struct:ring::sockaddr_ll	file:	access:public
ring::mm_len	test_tpacket.c	/^	size_t mm_len, rd_len;$/;"	m	struct:ring	file:	access:public
ring::mm_space	test_tpacket.c	/^	uint8_t *mm_space;$/;"	m	struct:ring	file:	access:public
ring::rd	test_tpacket.c	/^	struct iovec *rd;$/;"	m	struct:ring	typeref:struct:ring::iovec	file:	access:public
ring::rd_len	test_tpacket.c	/^	size_t mm_len, rd_len;$/;"	m	struct:ring	file:	access:public
ring::rd_num	test_tpacket.c	/^	int type, rd_num, flen, version;$/;"	m	struct:ring	file:	access:public
ring::type	test_tpacket.c	/^	int type, rd_num, flen, version;$/;"	m	struct:ring	file:	access:public
ring::version	test_tpacket.c	/^	int type, rd_num, flen, version;$/;"	m	struct:ring	file:	access:public
ring::walk	test_tpacket.c	/^	void (*walk)(int sock, struct ring *ring);$/;"	m	struct:ring	file:	access:public
setup_ring	test_tpacket.c	/^static void setup_ring(int sock, struct ring *ring, int version, int type)$/;"	f	file:	signature:(int sock, struct ring *ring, int version, int type)
sizeof	test_tpacket.c	/^		struct sockaddr_ll s_ll __align_tpacket(sizeof(struct tpacket2_hdr));$/;"	p	struct:frame_map::__anon_test_tpacket_c_77	file:	access:public	signature:(struct tpacket2_hdr)
sizeof	test_tpacket.c	/^		struct sockaddr_ll s_ll __align_tpacket(sizeof(struct tpacket_hdr));$/;"	p	struct:frame_map::__anon_test_tpacket_c_73	file:	access:public	signature:(struct tpacket_hdr)
status_bar_update	test_tpacket.c	/^static void status_bar_update(void)$/;"	f	file:	signature:(void)
test_kernel_bit_width	test_tpacket.c	/^static int test_kernel_bit_width(void)$/;"	f	file:	signature:(void)
test_payload	test_tpacket.c	/^static void test_payload(void *pay, size_t len)$/;"	f	file:	signature:(void *pay, size_t len)
test_tpacket	test_tpacket.c	/^static int test_tpacket(int version, int type)$/;"	f	file:	signature:(int version, int type)
test_user_bit_width	test_tpacket.c	/^static int test_user_bit_width(void)$/;"	f	file:	signature:(void)
total_bytes	test_tpacket.c	/^static unsigned int total_packets, total_bytes;$/;"	v	file:
total_packets	test_tpacket.c	/^static unsigned int total_packets, total_bytes;$/;"	v	file:
tpacket_str	test_tpacket.c	/^static const char *tpacket_str[] = {$/;"	v	file:
tpacket_version	packet_mmap.c	/^static const int tpacket_version = TPACKET_V1;$/;"	v	file:
type	test_tpacket.c	/^	int type, rd_num, flen, version;$/;"	m	struct:ring	file:	access:public
type_str	test_tpacket.c	/^static const char *type_str[] = {$/;"	v	file:
unmap_ring	test_tpacket.c	/^static void unmap_ring(int sock, struct ring *ring)$/;"	f	file:	signature:(int sock, struct ring *ring)
v1	test_tpacket.c	/^	} *v1;$/;"	m	union:frame_map	typeref:struct:frame_map::__anon_test_tpacket_c_73	file:	access:public
v2	test_tpacket.c	/^	} *v2;$/;"	m	union:frame_map	typeref:struct:frame_map::__anon_test_tpacket_c_77	file:	access:public
version	test_tpacket.c	/^	int type, rd_num, flen, version;$/;"	m	struct:ring	file:	access:public
version	test_tpacket.c	/^	uint32_t version;$/;"	m	struct:block_desc	file:	access:public
walk	test_tpacket.c	/^	void (*walk)(int sock, struct ring *ring);$/;"	m	struct:ring	file:	access:public
walk_ring	test_tpacket.c	/^static void walk_ring(int sock, struct ring *ring)$/;"	f	file:	signature:(int sock, struct ring *ring)
walk_v1_v2	test_tpacket.c	/^static void walk_v1_v2(int sock, struct ring *ring)$/;"	f	file:	signature:(int sock, struct ring *ring)
walk_v1_v2_rx	test_tpacket.c	/^static void walk_v1_v2_rx(int sock, struct ring *ring)$/;"	f	file:	signature:(int sock, struct ring *ring)
walk_v1_v2_tx	test_tpacket.c	/^static void walk_v1_v2_tx(int sock, struct ring *ring)$/;"	f	file:	signature:(int sock, struct ring *ring)
walk_v3	test_tpacket.c	/^static void walk_v3(int sock, struct ring *ring)$/;"	f	file:	signature:(int sock, struct ring *ring)
walk_v3_rx	test_tpacket.c	/^static void walk_v3_rx(int sock, struct ring *ring)$/;"	f	file:	signature:(int sock, struct ring *ring)
